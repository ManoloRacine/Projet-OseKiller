openapi: 3.0.3
info:
  title: OSE Killer API
  version: 1.0.0
paths:
  /sign-up:
    post:
      tags:
        - Authentication
      summary: Envoyer une demande d'inscription
      description: Envoyer une demande d'inscription
      operationId: signUp
      requestBody:
        description: Demande d'inscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
      responses:
        '202':
          description: Demande en attente d'acceptation
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '409':
          description: Email non disponible
  /sign-in:
    post:
      tags:
        - Authentication
      summary: Envoyer une demande de connection
      description: Envoyer une demande de connection
      operationId: signIn
      requestBody:
        description: Demande de connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SignInRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignInRequest'
        required: true
      responses:
        '200':
          description: Demande de connection accepté
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Informations d'identification invalides
  /user/validate:
    post:
      tags:
        - Authentication
      summary: Validation de l'inscription
      description: Validation de l'inscription
      operationId: validateUser
      requestBody:
        description: Valider l'inscription d'un nouveau user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatingUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidatingUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidatingUserRequest'
        required: true
      responses:
        '200':
          description: Validation a été complété
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Requête non autorisée
  /users:
    get:
      tags:
        - Authentication
      summary: Retourne tous les utilisateurs
      description: Retourne tous les utilisateurs
      operationId: getUsers
      parameters:
      - in: query
        name: isActive
        schema:
          type: boolean
      responses:
        '200':
          description: Les utilisateurs ont été envoyés
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Requête non autorisée
components:
  schemas:
    SignUpRequest:
      type: object
      properties:
        name:
          type: string
          example: Hugo Lantier
        email:
          type: string
          format: email
          example: hugol@example.com
        password:
          type: string
          example: vant8L52ANAp7U
        role:
          type: string
          example: STUDENT
          enum:
            - STUDENT
            - MANAGER
            - COMPANY
      xml:
        name: signUpRequest
    SignInRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: tesla.internship@example.com
        password:
          type: string
          example: vant8L52ANAp7U
      xml:
        name: signInRequest
    ValidatingUserRequest:
      type: object
      properties:
        token:
          type: string
          example: as7df83n48s9an39
        email:
          type: string
          format: email
          example: hugol@example.com
        valid:
          type: boolean
          example: true
      xml:
        name: userValidationRequest