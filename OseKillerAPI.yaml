openapi: 3.0.3
info:
  title: OSE Killer API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /sign-up:
    post:
      tags:
        - Authentication
      summary: Envoyer une demande d'inscription
      description: Envoyer une demande d'inscription
      operationId: signUp
      requestBody:
        description: Demande d'inscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
      responses:
        '202':
          description: Demande en attente d'acceptation
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '409':
          description: Email non disponible
  /sign-in:
    post:
      tags:
        - Authentication
      summary: Envoyer une demande de connection
      description: Envoyer une demande de connection
      operationId: signIn
      requestBody:
        description: Demande de connection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
        required: true
      responses:
        '200':
          description: Demande de connection accepté
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Informations d'identification invalides
  /sign-out:
    post:
      tags:
        - Authentication
      summary: Demande de révocation du refresh token
      description: Demande de révocation du refresh token
      operationId: signOut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        '200':
          description: Demande de révocation accepté
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Token Invalide
        '403':
          description: Le token n'appartient pas à l'utilisateur
      security:
        - bearerAuth: []
  /refresh:
    post:
      tags:
        - Authentication
      summary: Demande d'un nouveau JWT Valide
      description: Demande d'un nouveau JWT
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        '200':
          description: Demande d'un nouveau JWT Valide accepté
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '401':
          description: Token Invalide ou Expiré
        '403':
          description: Le token n'appartient pas à l'utilisateur
      security:
        - bearerAuth: []

  /users/{id}/validate:
    post:
      tags:
        - User
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Valider une inscription utilisateur
      description: Valider une inscription utilisateur
      operationId: validateUser
      requestBody:
        description: Valider l'inscription d'un nouveau user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserValidationRequest'
        required: true
      responses:
        '200':
          description: Validation a été complété
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '403':
          description: Requête non autorisée
        '404':
          description: utilisateur non trouvé
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - User
      summary: Retourne tous les utilisateurs
      description: Retourne tous les utilisateurs
      operationId: getUsers
      responses:
        '200':
          description: Les utilisateurs ont été envoyés
        '400':
          description: Format invalide / Attribut(s) manquant(s)
        '403':
          description: Requête non autorisée
      security:
        - bearerAuth: []
  /ping:
    get:
      tags:
        - Ping
      summary: Demande de ping
      description: Demande de ping
      operationId: ping
      responses:
        '200':
          description: Demande de ping reçu
  /ping/token:
    get:
      tags:
        - Ping
      summary: Demande de ping par un l'utilisateur autentifié
      description: Demande de ping par un l'utilisateur autentifié
      operationId: pingToken
      responses:
        '200':
          description: Demande de ping reçu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPingResponse'
        '403':
          description: Requête non autorisée
      security:
        - bearerAuth: []
  /students/{id}/cv:
    put:
      tags:
        - Student
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Téléverser le cv de format pdf d'un étudiant
      description: Téléverser le cv de format pdf d'un étudiant
      operationId: uploadCV
      requestBody:
        description: Téléverser un cv
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '204':
          description: Le fichier a été Téléversé et est en attente de validation
        '403':
          description: Requête non autorisée
        '404':
          description: étudiant non trouvé
      security:
        - bearerAuth: []
    get:
      tags:
        - Student
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Télécharger le cv de format pdf d'un étudiant
      description: Télécharger le cv de format pdf d'un étudiant
      operationId: downloadCV
      responses:
        '200':
          description: Le fichier a été Télécharger
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        '403':
          description: Requête non autorisée
        '404':
          description: étudiant non trouvé
      security:
        - bearerAuth: []
  /students/{id}/cv/validate:
    post:
      tags:
        - Student
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Valider le CV d'un étudiant
      description: Valider le cv de format pdf d'un étudiant
      operationId: validateCV
      requestBody:
        description: Valider le CV d'un étudiant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
        required: true
      responses:
        '200':
          description: Le CV à été valider
        '403':
          description: Requête non autorisée
        '404':
          description: étudiant non trouvé
      security:
        - bearerAuth: []
  /companies/{id}/offers:
    post:
      tags:
        - Company
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Poster l'offre de stage d'une entreprise
      description: Poster l'offre de stage d'une entreprise
      operationId: uploadOffer
      requestBody:
        description: Postulé une offre de stage
        content:
          multipart/form-data:
            schema:
              type: object
              $ref: '#/components/schemas/InternshipOffer'
        required: true
      responses:
        '202':
          description: L'offre à été soumise et est en attente de validation
        '403':
          description: Requête non autorisée
        '404':
          description: entreprise non trouvé
      security:
        - bearerAuth: []
    get:
      tags:
        - Company
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      summary: Obtenir les offres de stage d'une entreprise
      description: Obtenir les offres de stage d'une entreprise
      operationId: getOffers
      responses:
        '200':
          description: Les offres ont été reçu
          content:
            multipart/form-data:
              schema:
                type: array
                items:
                  type : object
                  properties:
                    id:
                      type: number
                      example: 1
                    position:
                      type: string
                      example: Junior Web Developer
                    salary:
                      type: number
                      example: 25
                    startDate:
                      type: string
                      format: date
                      example: 2022-10-30
                    endDate:
                      type: string
                      format: date
                      example: 2023-01-30
        '403':
          description: Requête non autorisée
        '404':
          description: entreprise non trouvé
      security:
        - bearerAuth: []
  /companies/{companyId}/offers/{offerId}:
    get:
      tags:
        - Company
      parameters:
        - in: path
          name: companyId
          schema:
            type: integer
          required: true
        - in: path
          name: offerId
          schema:
            type: integer
          required: true
      summary: Obtenir une offre de stage
      description: Obtenir une offre de stage
      operationId: getOffer
      responses:
        '200':
          description: L'offre a été reçu
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  position:
                    type: string
                    example: Junior Web Developer
                  salary:
                    type: number
                    example: 25
                  startDate:
                    type: string
                    format: date
                    example: 2022-10-30
                  endDate:
                    type: string
                    format: date
                    example: 2023-01-30
                  file:
                    type: string
                    format: binary
        '403':
          description: Requête non autorisée
        '404':
          description: entreprise ou offre non trouvé
      security:
        - bearerAuth: []
  /companies/{companyId}/offers/{offerId}/validate:
    post:
      tags:
        - Company
      parameters:
        - in: path
          name: companyId
          schema:
            type: integer
          required: true
        - in: path
          name: offerId
          schema:
            type: integer
          required: true
      summary: Valider une offre de stage
      description: Valider une offre de stage
      operationId: validateOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: L'offre a été validé
        '403':
          description: Requête non autorisée
        '404':
          description: entreprise ou offre non trouvé
      security:
        - bearerAuth: []
  /companies/{companyId}/offers/{offerId}/apply:
    post:
      tags:
        - Company
      summary: Appliquer à une offre de stage
      description: Appliquer à une offre de stage
      operationId: applyToOffer
      responses:
        '202':
          description: Application à l'offre de stage à été envoyé
        '409':
          description: L'étudiant a déjà appliqué
        '403':
          description: Requête non autorisée ou l'offre de stage est en attente de validation
        '404':
          description: entreprise ou offre non trouvé



  /offers:
    get:
      tags:
        - Offers
      parameters:
        - in: query
          name: accepted
          schema:
            type: boolean
      summary: Retourne toutes les offres selon la query
      description: Retourne toutes les offres selon la query
      operationId: validOffers
      responses:
        '200':
          description: Les offres ont étés envoyés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferNoPdf'
        '403':
          description: Requête non autorisée

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    JwtResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        refreshToken:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        tokenType:
          type: string
          example: Bearer
    AuthPingResponse:
      type: object
      properties:
        email:
          type: string
          format: email
          example: hugol@example.com
        role:
          type: string
          example: STUDENT
    ValidationRequest:
      type: object
      required:
        - valid
      properties:
        valid:
          type: boolean
          example: false
        feedBack:
          type: string
          example: trop long
    SignUpRequest:
      type: object
      required:
        - name
        - email
        - password
        - role
      properties:
        name:
          type: string
          example: Hugo Lantier
        email:
          type: string
          format: email
          example: hugol@example.com
        password:
          type: string
          example: vant8L52ANAp7U
        role:
          type: string
          example: STUDENT
          enum:
            - STUDENT
            - MANAGER
            - COMPANY
      xml:
        name: signUpRequest
    InternshipOffer:
      type: object
      properties:
        position:
          type: string
          example: Junior Web Developer
        salary:
          type: number
          example: 25
        startDate:
          type: string
          format: date
          example: 2022-10-30
        endDate:
          type: string
          format: date
          example: 2023-01-30
        file:
          type: string
          format: binary
    SignInRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: tesla.internship@example.com
        password:
          type: string
          example: vant8L52ANAp7U
      xml:
        name: signInRequest
    TokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      xml:
        name: signInRequest
    UserValidationRequest:
      type: object
      required:
        - valid
      properties:
        valid:
          type: boolean
          example: true
      xml:
        name: userValidationRequest
    OfferNoPdf:
      type: object
      properties:
        offerId:
          type: integer
          example: 1
        companyId:
          type: integer
          example: 2
        companyName:
          type: string
          example : google
        position:
          type: string
          example: dev
        salary:
          type: number
          example: 20.50
        startDate:
          type: string
          example: 2022-10-20
        endDate:
          type: string
          example: 2022-12-20
      xml:
        name: offerNoPdf
